{"version":3,"sources":["hooks/useFetch.js","utils/constants.js","components/Loading/Loading.jsx","components/SliderMovies/SliderMovies.jsx","components/MovieList/MovieList.jsx","components/Footer/Footer.jsx","pages/home.jsx","components/MovieGrid/MovieGrid.jsx","pages/newMovies.jsx","pages/popular.jsx","pages/search.jsx","components/ModalVideo/ModalVideo.jsx","pages/movie/movie.jsx","pages/error.jsx","components/MenuTop/MenuTop.jsx","App.js","reportWebVitals.js","index.js"],"names":["useFetch","url","options","useState","loading","setLoading","result","setResult","error","setError","useEffect","a","fetch","res","json","URL_API","API_KEY","Loading","className","size","Movie","props","movie","id","backdrop_path","title","overview","backDropPath","style","backgroundImage","to","type","SliderMovies","newMovies","results","autoplay","map","RenderMovie","poster_path","posterPath","Item","Meta","avatar","src","shape","icon","RightOutlined","MovieList","popularMovies","header","bordered","dataSource","renderItem","Footer","Layout","Home","urlPopular","urlRanked","topRanked","span","Card","MovieCard","hoverable","width","cover","alt","actions","PlayCircleOutlined","MovieGrid","page","setPage","movies","setMovies","totalPages","setTotalPages","urlWithPagination","response","moviesObj","total_pages","fetchMovies","undefined","onChange","currentPage","total","hideOnSinglePage","Title","Typography","NewMovies","console","log","Popular","Search","currentSearch","setCurrentSearch","setUrl","setTimeout","prefix","SearchOutlined","placeholder","input","target","value","ModalVideo","videoKey","videoPlatform","isOpen","isClose","urlVideo","setUrlVideo","visible","centered","onCancel","footer","controls","muted","movieInfo","videoInfo","backdropPath","offset","image","PosterMovie","ComponentMovieInfo","release_date","genres","key","site","setVisible","showModal","closeModal","moment","format","PlaySquareOutlined","onClick","renderVideo","gen","name","useParams","urlInfo","movieVideo","length","Error404","MenuTop","theme","mode","defaultSelectedKeys","lineHeight","App","Header","Content","zIndex","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0ZAyBeA,EAvBE,SAACC,EAAKC,GAAW,IAAD,EACCC,oBAAS,GADV,mBACtBC,EADsB,KACbC,EADa,OAEDF,mBAAS,MAFR,mBAEtBG,EAFsB,KAEdC,EAFc,OAGHJ,mBAAS,MAHN,mBAGtBK,EAHsB,KAGfC,EAHe,KAmB7B,OAdAC,qBAAU,WACN,sBAAC,8BAAAC,EAAA,+EAEwBC,MAAMX,EAAKC,GAFnC,cAEaW,EAFb,gBAGyBA,EAAIC,OAH7B,OAGaA,EAHb,OAIOP,EAAUO,GAEVT,GAAW,GANlB,kDAQOI,EAAS,EAAD,IACRJ,GAAW,GATlB,yDAAD,KAYD,CAACH,EAASD,IACN,CAACG,UAASE,SAAQE,UCrBhBO,EAAU,+BACVC,EAAU,mC,mECYRC,EATC,WACZ,OACI,sBAAKC,UAAU,UAAf,UACI,cAAC,IAAD,CAAMC,KAAK,UACX,iDCwBNC,EAAQ,SAAAC,GAAS,IAAD,EAQdA,EANAC,MACIC,EAHU,EAGVA,GACAC,EAJU,EAIVA,cACAC,EALU,EAKVA,MACAC,EANU,EAMVA,SAIFC,EAAY,6CAAyCH,GAE3D,OACI,qBACIN,UAAU,uBACVU,MAAO,CAACC,gBAAgB,QAAD,OAASF,EAAT,OAF3B,SAII,qBAAKT,UAAU,4BAAf,SACI,gCACI,6BAAKO,IACL,4BAAIC,IACJ,cAAC,IAAD,CAAMI,GAAE,iBAAYP,GAApB,SACI,cAAC,IAAD,CAAQQ,KAAK,UAAb,kCAQTC,EAvDM,SAAAX,GAAU,IAEnBY,EAAcZ,EAAdY,UAER,GAAGA,EAAU7B,UAAY6B,EAAU3B,OAC/B,OAAO,cAAC,EAAD,IACL,IACM4B,EAAYD,EAAU3B,OAAtB4B,QAER,OACI,cAAC,IAAD,CAAUC,UAAQ,EAACjB,UAAU,gBAA7B,SACCgB,EAAQE,KAAI,SAAAd,GAAK,OACd,cAAC,EAAD,CAEQA,MAAOA,GADFA,EAAMC,U,0BCS7Bc,G,OAAc,SAAAhB,GAAU,IAAD,EAOrBA,EALAC,MACIgB,EAHiB,EAGjBA,YACAf,EAJiB,EAIjBA,GACAE,EALiB,EAKjBA,MAKFc,EAAU,6CAAyCD,GAGzD,OACI,eAAC,IAAKE,KAAN,CAAWtB,UAAU,oBAArB,UACI,cAAC,IAAKsB,KAAKC,KAAX,CACIC,OAAQ,cAAC,IAAD,CAAQC,IAAKJ,IACrBd,MAAO,cAAC,IAAD,CAAMK,GAAE,iBAAYP,GAApB,SAA2BE,MAEtC,cAAC,IAAD,CAAMK,GAAE,iBAAYP,GAApB,SACI,cAAC,IAAD,CACIQ,KAAK,UACLa,MAAM,SACNC,KAAM,cAACC,EAAA,EAAD,aAQXC,EAtDG,SAAA1B,GAAU,IAEjBI,EAAwBJ,EAAxBI,MAAOuB,EAAiB3B,EAAjB2B,cAGd,OAAGA,EAAc/B,UAAY+B,EAAc1C,OAEnC,cAAC,EAAD,IAKJ,cAAC,IAAD,CACIY,UAAU,aACVC,KAAK,UACL8B,OAAQ,6BAAKxB,IACbyB,UAAQ,EACRC,WAAYH,EAAc1C,OAAO4B,QACjCkB,WAAY,SAAA9B,GAAK,OAAG,cAAC,EAAD,CAAaA,MAAOA,QCJrC+B,G,OAfA,WAAO,IAEVA,EAAWC,IAAXD,OAER,OACI,cAACA,EAAD,CACInC,UAAU,SADd,SAGI,6FCgCGqC,EAhCF,WAET,IAAMtD,EAAG,UAAMc,EAAN,sCAA2CC,EAA3C,0BACHwC,EAAU,UAAOzC,EAAP,kCAAwCC,EAAxC,0BACVyC,EAAS,UAAM1C,EAAN,oCAAyCC,EAAzC,0BAETiB,EAAYjC,EAASC,GACrB+C,EAAgBhD,EAASwD,GACzBE,EAAY1D,EAASyD,GAE3B,OACI,gCACI,cAAC,EAAD,CAAcxB,UAAWA,IACzB,eAAC,IAAD,WACI,cAAC,IAAD,CAAK0B,KAAM,GAAX,SACI,cAAC,EAAD,CACIlC,MAAM,yBACNuB,cAAeA,MAGvB,cAAC,IAAD,CAAKW,KAAM,GAAX,SACI,cAAC,EAAD,CACIlC,MAAM,2BACNuB,cAAeU,SAI3B,cAAC,EAAD,Q,6CC/BJjB,EAASmB,IAATnB,KA2CFoB,EAAY,SAAC,GAAD,QAAGvC,MAASC,EAAZ,EAAYA,GAAIE,EAAhB,EAAgBA,MAAOa,EAAvB,EAAuBA,YAAvB,OAChB,cAAC,IAAD,CAAMR,GAAE,iBAAYP,GAApB,SACE,cAAC,IAAD,CACEuC,WAAS,EACTlC,MAAO,CAAEmC,MAAO,KAChB7C,UAAU,OACV8C,MAAO,qBAAKC,IAAI,UAAUtB,IAAG,6CAAwCL,KACrE4B,QAAS,CAAC,cAACC,EAAA,EAAD,CAAoBjD,UAAU,UAAa,SALvD,SAOE,cAACuB,EAAD,CAAMhB,MAAOA,SAKJ2C,EAvDG,SAAC,GAAa,IAAXnE,EAAU,EAAVA,IAAU,EACLE,mBAAS,GADJ,mBACtBkE,EADsB,KAChBC,EADgB,OAEDnE,mBAAS,IAFR,mBAEtBoE,EAFsB,KAEdC,EAFc,OAGOrE,mBAAS,GAHhB,mBAGtBsE,EAHsB,KAGVC,EAHU,KAK7BhE,qBAAU,YACS,uCAAG,gCAAAC,EAAA,6DACZgE,EADY,UACW1E,EADX,iBACuBoE,GADvB,SAEKzD,MAAM+D,GAFX,cAEZC,EAFY,gBAGMA,EAAS9D,OAHf,OAGZ+D,EAHY,OAIlBH,EAAcG,EAAUC,aACxBN,EAAUK,EAAU3C,SALF,2CAAH,qDAOjB6C,KACC,CAACV,EAAMpE,IAMV,YAAe+E,IAAXT,EACK,cAAC,EAAD,IAGP,0BAASrD,UAAU,gBAAnB,UACGqD,EAAOnC,KAAI,SAACd,GAAD,OACV,cAAC,EAAD,CAAWA,MAAOA,GAAYA,EAAMC,OAEtC,sBAAKL,UAAU,YAAf,UACE,cAAC,IAAD,CACE+D,SAdgB,SAACZ,GACvBC,EAAQD,IAcFa,YAAab,EACbc,MAAOV,EACPW,kBAAkB,IAEpB,8BCxCAC,G,MAAUC,IAAVD,OAeOE,EAbG,WAEhB,IAAMtF,EAAG,UAAMc,EAAN,sCAA2CC,EAA3C,0BAGP,OAFFwE,QAAQC,IAAIxF,GAGN,sBAAKiB,UAAU,OAAf,UACI,cAACmE,EAAD,CAAOnE,UAAU,UAAjB,qCACA,cAAC,EAAD,CAAWjB,IAAKA,QCZpBoF,EAAUC,IAAVD,MAaOK,EAVC,WACd,IAAMzF,EAAG,UAAMc,EAAN,kCAAuCC,EAAvC,0BACT,OACE,sBAAKE,UAAU,OAAf,UACE,cAAC,EAAD,CAAOA,UAAU,UAAjB,oCACA,cAAC,EAAD,CAAWjB,IAAKA,Q,kBCNdoF,EAAUC,IAAVD,MA+BOM,EA7BA,WAAO,IAAD,EACuBxF,mBAAS,IADhC,mBACZyF,EADY,KACGC,EADH,OAEG1F,mBAAS,IAFZ,mBAEZF,EAFY,KAEP6F,EAFO,KAInBpF,qBAAU,WACRqF,YAAW,WACa,KAAlBH,GACFE,EAAO,GAAD,OAAI/E,EAAJ,iCAAoCC,EAApC,iCAAoE4E,MAE3E,OACF,CAACA,IAIJ,OACE,sBAAK1E,UAAU,OAAf,UACE,cAAC,EAAD,CAAOA,UAAU,UAAjB,mCACA,cAAC,IAAD,CACE8E,OAAQ,cAACC,EAAA,EAAD,IACRC,YAAY,uBACZjB,SARkB,SAACkB,GAAD,OAAWN,EAAiBM,EAAMC,OAAOC,QAS3DnF,UAAU,eACVC,KAAK,UAEP,cAAC,EAAD,CAAWlB,IAAKA,Q,6CCCPqG,G,OA3BI,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAAc,EACnCvG,mBAAS,MAD0B,mBAC5DwG,EAD4D,KAClDC,EADkD,KAcnE,OAZAlG,qBAAU,WACR,OAAQ8F,GACN,IAAK,UACHI,EAAY,oBAAD,OAAqBL,IAChC,MACF,IAAK,QACHK,EAAY,qBAAD,OAAsBL,OAKpC,CAACC,EAAeD,IAEjB,cAAC,IAAD,CACErF,UAAU,cACV2F,QAASJ,EACTK,UAAQ,EACRC,SAAUL,EACVM,QAAQ,EALV,SAOE,cAAC,IAAD,CAAa/G,IAAK0G,EAAUM,UAAQ,EAACC,OAAK,Q,UCW1C7E,GAAc,SAAAhB,GAAS,IAAD,EASpBA,EAPA8F,UACI7G,OACIkB,EAJY,EAIZA,cACAc,EALY,EAKZA,YAGR8E,EACA/F,EADA+F,UAGEC,EAAY,6CAAyC7F,GAE3D,OACI,qBACIN,UAAU,QACVU,MAAO,CAACC,gBAAgB,QAAD,OAAUwF,EAAV,OAF3B,SAIQ,qBAAKnG,UAAU,cAAf,SACI,eAAC,IAAD,CAAKA,UAAU,QAAf,UACI,cAAC,IAAD,CACIyC,KAAM,EACN2D,OAAQ,EACRpG,UAAU,gBAHd,SAKI,cAAC,GAAD,CAAaqG,MAAOjF,MAGxB,cAAC,IAAD,CACIqB,KAAM,GACNzC,UAAU,cAFd,SAII,cAAC,GAAD,CAAoBiG,UAAW9F,EAAM8F,UAAWC,UAAWA,cAQjFI,GAAc,SAAAnG,GAAS,IACjBkG,EAAUlG,EAAVkG,MACFhF,EAAU,6CAAyCgF,GAEzD,OACI,qBAAK3F,MAAO,CAACC,gBAAgB,QAAD,OAAUU,EAAV,UAI9BkF,GAAqB,SAAC,GAOnB,IAAD,IANJN,UACI7G,OACImB,EAIJ,EAJIA,MAAWiG,GAIf,EAJWnG,GAIX,EAJemG,cAAcC,EAI7B,EAJ6BA,OAAQjG,EAIrC,EAJqCA,SAIrC,IADJ0F,UAAaQ,EACT,EADSA,IAAKC,EACd,EADcA,KACd,EAE0B1H,oBAAS,GAFnC,mBAEG0G,EAFH,KAEYiB,EAFZ,KAGEC,EAAY,kBAAMD,GAAW,IAC7BE,EAAa,kBAAMF,GAAW,IAyBpC,OACI,gCACI,sBAAK5G,UAAU,cAAf,UACI,+BACKO,EACD,+BAAOwG,IAAOP,EAAc,cAAcQ,OAAO,aA5B7C,WAChB,GAAIN,GAAOC,EACP,OACI,gCACI,cAAC,IAAD,CACAhF,KAAM,cAACsF,GAAA,EAAD,IACNC,QAASL,EAFT,yBAMJ,cAAC,EAAD,CACQxB,SAAUqB,EACVpB,cAAeqB,EACfpB,OAAQI,EACRH,QAASsB,OAgBhBK,MAGL,sBAAKnH,UAAU,iBAAf,UACI,yCACA,4BAAIQ,IACJ,4CACA,6BACKiG,EAAOvF,KAAI,SAAAkG,GAAG,OACX,6BAAkBA,EAAIC,MAAbD,EAAI/G,gBAStBH,GAzID,WAAM,IACTG,EAAMiH,cAANjH,GAEDkH,EAAO,UAAM1H,EAAN,kBAAuBQ,EAAvB,oBAAqCP,EAArC,mBACP2F,EAAQ,UAAM5F,EAAN,kBAAuBQ,EAAvB,2BAA4CP,EAA5C,mBACRmG,EAAYnH,EAASyI,GAErBC,EAAa1I,EAAS2G,GAG5B,GAAGQ,EAAU/G,UAAY+G,EAAU7G,SAAWoI,EAAWpI,OACrD,OAAO,cAAC,EAAD,IAEX,GAAGoI,EAAWpI,OAAO4B,QAAQyG,OAAS,EAAE,CAAC,IAGnBvB,EAHkB,YAKhCsB,EAHApI,OACI4B,QAH4B,MAMpC,OAAO,cAAE,GAAF,CAAciF,UAAWA,EAAWC,UAAWA,IAEtD,OACI,oBAAIlG,UAAU,kBAAd,sDC9BG0H,GAJE,WACb,MAAO,gB,UCqCIC,I,OA7BC,WACZ,OACI,qBAAK3H,UAAU,WAAf,SAII,eAAC,KAAD,CACI4H,MAAM,OACNC,KAAK,aACLC,oBAAqB,CAAC,KACtBpH,MAAO,CAACqH,WAAY,QAJxB,UAMI,cAAC,KAAKzG,KAAN,UACI,cAAC,IAAD,CAAMV,GAAG,IAAT,mBADW,KAGf,cAAC,KAAKU,KAAN,UACI,cAAC,IAAD,CAAMV,GAAG,aAAT,yBADW,KAGf,cAAC,KAAKU,KAAN,UACI,cAAC,IAAD,CAAMV,GAAG,WAAT,sBADW,KAGf,cAAC,KAAKU,KAAN,UACI,cAAC,IAAD,CAAMV,GAAG,UAAT,qBADW,YCUhBoH,GAzBH,WAAO,IAETC,EAAoB7F,IAApB6F,OAAQC,EAAY9F,IAAZ8F,QAEhB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAACD,EAAD,CAAQvH,MAAO,CAACyH,OAAQ,GAAxB,SACE,cAAC,GAAD,MAEF,cAACD,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,KAAK,IAAIC,OAAO,EAAMC,UAAWjG,IACxC,cAAC,IAAD,CAAO+F,KAAK,aAAaC,OAAO,EAAMC,UAAWjE,IACjD,cAAC,IAAD,CAAO+D,KAAK,WAAWC,OAAO,EAAMC,UAAW9D,IAC/C,cAAC,IAAD,CAAO4D,KAAK,UAAUC,OAAO,EAAMC,UAAW7D,IAC9C,cAAC,IAAD,CAAO2D,KAAK,aAAaC,OAAO,EAAMC,UAAWpI,KACjD,cAAC,IAAD,CAAOkI,KAAK,IAAIE,UAAWZ,gBCpBxBa,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c314a51a.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\r\n\r\nconst useFetch = (url, options)=>{\r\n    const [loading, setLoading] = useState(true);\r\n    const [result, setResult] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        (async ()=>{\r\n            try{\r\n                const res= await fetch(url, options);\r\n                const json= await res.json();\r\n                setResult(json);\r\n                \r\n                setLoading(false);\r\n            } catch(err){\r\n                setError(err);\r\n                setLoading(false);\r\n            }\r\n        })()\r\n    }, [options, url])\r\n    return {loading, result, error};\r\n}\r\n\r\n\r\nexport default useFetch;","export const URL_API = \"https://api.themoviedb.org/3\";\r\nexport const API_KEY = \"20734de95bb307848273312ec09fe030\";\r\n","import {Spin} from 'antd';\r\n\r\nimport './Loading.sass';\r\n\r\nconst Loading = () =>{\r\n    return (\r\n        <div className=\"loading\">\r\n            <Spin size=\"large\"/>\r\n            <h5>Cargando...</h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport { Carousel, Button } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport './SliderMovies.sass';\r\nimport Loading from '../Loading';\r\n\r\n\r\nconst SliderMovies = props => {\r\n\r\n    const { newMovies } = props;\r\n\r\n    if(newMovies.loading || !newMovies.result){\r\n        return <Loading/>\r\n    }else{\r\n        const { results } = newMovies.result;\r\n\r\n        return (\r\n            <Carousel autoplay className='slider-movies'>\r\n            {results.map(movie=>(\r\n                <Movie\r\n                        key={movie.id}\r\n                        movie={movie}\r\n                    />\r\n            ))}\r\n            </Carousel>\r\n        );\r\n    }\r\n\r\n    \r\n};\r\n\r\n// componente dendro de componente\r\nconst Movie = props =>{\r\n    const {\r\n        movie:{\r\n            id,\r\n            backdrop_path,\r\n            title,\r\n            overview\r\n        }\r\n    } = props;\r\n\r\n    const backDropPath = `https://image.tmdb.org/t/p/original${backdrop_path}`\r\n\r\n    return(\r\n        <div    \r\n            className=\"slider-movies__movie\"\r\n            style={{backgroundImage:`url('${backDropPath}')`}}\r\n        >\r\n            <div className=\"slider-movies__movie-info\">\r\n                <div>\r\n                    <h2>{title}</h2>\r\n                    <p>{overview}</p>\r\n                    <Link to={`/movie/${id}`}>\r\n                        <Button type=\"primary\">Ver más</Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SliderMovies;","import {List, Avatar, Button} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../Loading\";\r\nimport { RightOutlined } from '@ant-design/icons';\r\nimport './MovieList.sass';\r\n\r\nconst MovieList = props => {\r\n\r\n    const {title, popularMovies} = props;\r\n\r\n\r\n    if(popularMovies.Loading || !popularMovies.result){\r\n        return (\r\n            <Loading />\r\n        )\r\n    }\r\n    \r\n    return(\r\n        <List\r\n            className=\"movie-list\"\r\n            size=\"default\"\r\n            header={<h2>{title}</h2>}\r\n            bordered\r\n            dataSource={popularMovies.result.results}\r\n            renderItem={movie=> <RenderMovie movie={movie} />}\r\n        />\r\n    )\r\n}\r\n\r\nconst RenderMovie = props => {\r\n    const {\r\n        movie: {\r\n            poster_path,\r\n            id,\r\n            title\r\n        } \r\n    } = props;\r\n\r\n    \r\n    const posterPath = `https://image.tmdb.org/t/p/original${poster_path}`\r\n\r\n\r\n    return(\r\n        <List.Item className=\"movie-list__movie\">\r\n            <List.Item.Meta\r\n                avatar={<Avatar src={posterPath} />}\r\n                title={<Link to={`/movie/${id}`}>{title}</Link>}\r\n            />\r\n            <Link to={`/movie/${id}`}>\r\n                <Button \r\n                    type=\"primary\"\r\n                    shape=\"circle\"\r\n                    icon={<RightOutlined />} \r\n                >\r\n                </Button>\r\n            </Link>\r\n        </List.Item >\r\n    )\r\n}\r\n\r\nexport default MovieList;","import React from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nimport './Footer.sass';\r\n\r\nconst Footer = () => {\r\n\r\n    const { Footer } = Layout;\r\n\r\n    return (\r\n        <Footer \r\n            className=\"footer\"\r\n        >\r\n            <p>\r\n               Hecho con ❤ por Gabriela Duran y Hannah Carabolante\r\n            </p>\r\n        </Footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport useFetch from \"../hooks/useFetch\";\r\n\r\nimport {URL_API, API_KEY} from '../utils/constants';\r\nimport { Row, Col } from \"antd\";\r\n\r\nimport SliderMovies from '../components/SliderMovies';\r\n\r\nimport MovieList from \"../components/MovieList/MovieList\";\r\nimport Footer from \"../components/Footer\";\r\n\r\n\r\n\r\nconst Home = () =>{\r\n    \r\n    const url = `${URL_API}/movie/now_playing?api_key=${API_KEY}&language=es-ES&page=1`;\r\n    const urlPopular =  `${URL_API}/movie/popular?api_key=${API_KEY}&language=es-ES&page=1`\r\n    const urlRanked = `${URL_API}/movie/top_rated?api_key=${API_KEY}&language=es-ES&page=1`\r\n\r\n    const newMovies = useFetch(url);\r\n    const popularMovies = useFetch(urlPopular);\r\n    const topRanked = useFetch(urlRanked);\r\n\r\n    return (\r\n        <div>\r\n            <SliderMovies newMovies={newMovies}/>\r\n            <Row>\r\n                <Col span={12}> \r\n                    <MovieList \r\n                        title=\"Películas Populares\"\r\n                        popularMovies={popularMovies}\r\n                    />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <MovieList \r\n                        title=\"Top Mejores Películas\"\r\n                        popularMovies={topRanked}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, {useState, useEffect} from 'react';\r\nimport { Card } from 'antd';\r\nimport { PlayCircleOutlined } from \"@ant-design/icons\";\r\nimport { Link } from 'react-router-dom';\r\nimport './MovieGrid.sass'\r\nimport { Pagination } from \"antd\";\r\nimport Loading from \"../Loading\";\r\n\r\n\r\nconst { Meta } = Card;\r\n\r\nconst MovieGrid = ({ url }) => {\r\n  const [page, setPage] = useState(1);\r\n  const [movies, setMovies] = useState([]);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      const urlWithPagination = `${url}&page=${page}`;\r\n      const response = await fetch(urlWithPagination);\r\n      const moviesObj = await response.json();\r\n      setTotalPages(moviesObj.total_pages);\r\n      setMovies(moviesObj.results);\r\n    };\r\n    fetchMovies();\r\n  }, [page, url]);\r\n\r\n  const handlePageClick = (page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  if (movies === undefined) {\r\n    return <Loading />;\r\n  }\r\n  return (\r\n    <section className=\"cards-section\">\r\n      {movies.map((movie) => (\r\n        <MovieCard movie={movie} key={movie.id} />\r\n      ))}\r\n      <div className=\"paginator\">\r\n        <Pagination\r\n          onChange={handlePageClick}\r\n          currentPage={page}\r\n          total={totalPages}\r\n          hideOnSinglePage={true}\r\n        />\r\n        <br />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst MovieCard = ({ movie: { id, title, poster_path } }) => (\r\n  <Link to={`/movie/${id}`}>\r\n    <Card\r\n      hoverable\r\n      style={{ width: 240 }}\r\n      className=\"card\"\r\n      cover={<img alt=\"example\" src={`https://image.tmdb.org/t/p/original${poster_path}`} />}\r\n      actions={[<PlayCircleOutlined className=\"__icon\" key=\"plus\" />]}\r\n    >\r\n      <Meta title={title} />\r\n    </Card>\r\n  </Link>\r\n);\r\n\r\nexport default MovieGrid;","import {URL_API, API_KEY} from '../utils/constants';\r\nimport { Typography } from \"antd\";\r\nimport MovieGrid from \"../components/MovieGrid\";\r\nimport './movie/movie.sass';\r\n\r\n\r\nconst { Title } = Typography;\r\n\r\nconst NewMovies = () => {\r\n\r\n  const url = `${URL_API}/movie/now_playing?api_key=${API_KEY}&language=es-ES&page=1`;\r\n  console.log(url)\r\n  \r\n    return (\r\n        <div className=\"page\">\r\n            <Title className=\"__title\">Últimos Lanzamientos</Title>\r\n            <MovieGrid url={url} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewMovies;","import { URL_API, API_KEY } from \"../utils/constants\";\r\nimport MovieGrid from \"../components/MovieGrid/MovieGrid\";\r\nimport { Typography } from \"antd\";\r\nimport './movie/movie.sass';\r\nconst { Title } = Typography;\r\n\r\n\r\nconst Popular = () => {\r\n  const url = `${URL_API}/movie/popular?api_key=${API_KEY}&language=es-ES&page=1`;\r\n  return (\r\n    <div className=\"page\">\r\n      <Title className=\"__title\">Películas Populares</Title>\r\n      <MovieGrid url={url} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popular;","import { useState, useEffect } from \"react\";\r\nimport MovieGrid from \"../components/MovieGrid/MovieGrid\";\r\nimport { URL_API, API_KEY } from \"../utils/constants\";\r\nimport { Input, Typography } from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport './movie/movie.sass';\r\nconst { Title } = Typography;\r\n\r\nconst Search = () => {\r\n  const [currentSearch, setCurrentSearch] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (currentSearch !== \"\") {\r\n        setUrl(`${URL_API}/search/movie?api_key=${API_KEY}&languaje=es-ES&query=${currentSearch}`);\r\n      }\r\n    }, 2000);\r\n  }, [currentSearch]);\r\n\r\n  const handlerOnChange = (input) => setCurrentSearch(input.target.value);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <Title className=\"__title\">Busca una película</Title>\r\n      <Input\r\n        prefix={<SearchOutlined />}\r\n        placeholder=\"Ingresá el nombre\"\r\n        onChange={handlerOnChange}\r\n        className=\"input-search\"\r\n        size=\"large\"\r\n      />\r\n      <MovieGrid url={url} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;","import React from 'react';\r\nimport { useState, useEffect } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport ReactPlayer from \"react-player\";\r\nimport \"./ModalVideo.sass\";\r\n\r\nconst ModalVideo = ({ videoKey, videoPlatform, isOpen, isClose }) => {\r\n  const [urlVideo, setUrlVideo] = useState(null);\r\n  useEffect(() => {\r\n    switch (videoPlatform) {\r\n      case \"YouTube\":\r\n        setUrlVideo(`https://youtu.be/${videoKey}`);\r\n        break;\r\n      case \"Vimeo\":\r\n        setUrlVideo(`https://vimeo.com/${videoKey}`);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [videoPlatform, videoKey]);\r\n  return (\r\n    <Modal\r\n      className=\"modal-video\"\r\n      visible={isOpen}\r\n      centered\r\n      onCancel={isClose}\r\n      footer={false}\r\n    >\r\n      <ReactPlayer url={urlVideo} controls muted />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalVideo;","import { useState } from 'react';\r\nimport {Row, Col, Button} from 'antd';\r\nimport { useParams } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport {URL_API, API_KEY} from '../../utils/constants';\r\nimport Loading from '../../components/Loading';\r\nimport ModalVideo from '../../components/ModalVideo';\r\nimport { PlaySquareOutlined } from \"@ant-design/icons\";\r\n\r\nimport './movie.sass';\r\n\r\nconst Movie = () =>{\r\n    const {id} = useParams();\r\n    \r\n    const urlInfo = `${URL_API}/movie/${id}?api_key=${API_KEY}&language=es-ES`;\r\n    const urlVideo = `${URL_API}/movie/${id}/videos?api_key=${API_KEY}&language=en-EN`;\r\n    const movieInfo = useFetch(urlInfo);\r\n\r\n    const movieVideo = useFetch(urlVideo);\r\n\r\n\r\n    if(movieInfo.loading || !movieInfo.result || !movieVideo.result){\r\n        return <Loading/>;\r\n    }\r\n    if(movieVideo.result.results.length > 0){\r\n        const{\r\n            result: {\r\n                results: [videoInfo],\r\n            },\r\n        } = movieVideo;\r\n        return < RenderMovie movieInfo={movieInfo} videoInfo={videoInfo} />;\r\n    }else{\r\n        return(\r\n            <h1 className=\"provisory-title\">No encontramos datos de esa película</h1>\r\n        )\r\n    }\r\n};\r\n\r\nconst RenderMovie = props =>{\r\n    const {\r\n        movieInfo: {\r\n            result: {\r\n                backdrop_path,\r\n                poster_path\r\n            }\r\n        },\r\n        videoInfo\r\n    } = props;\r\n\r\n    const backdropPath = `https://image.tmdb.org/t/p/original${backdrop_path}`\r\n\r\n    return(\r\n        <div \r\n            className=\"movie\"\r\n            style={{backgroundImage: `url('${backdropPath}')`}}\r\n            >\r\n                <div className=\"movie__dark\">\r\n                    <Row className=\"extra\">\r\n                        <Col \r\n                            span={8} \r\n                            offset={3} \r\n                            className=\"movie__poster\"\r\n                        >\r\n                            <PosterMovie image={poster_path}/>\r\n                            \r\n                        </Col>\r\n                        <Col \r\n                            span={10} \r\n                            className=\"movie__info\"\r\n                        >\r\n                            <ComponentMovieInfo movieInfo={props.movieInfo} videoInfo={videoInfo}/>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PosterMovie = props =>{\r\n    const { image } = props;\r\n    const posterPath = `https://image.tmdb.org/t/p/original${image}`;\r\n\r\n    return (\r\n        <div style={{backgroundImage: `url('${posterPath}')`}}></div>\r\n    )\r\n}\r\n\r\nconst ComponentMovieInfo = ({\r\n    movieInfo: {\r\n        result: { \r\n            title, id, release_date, genres, overview \r\n        }\r\n    },\r\n    videoInfo: { key, site },\r\n  }) => {\r\n    \r\n    const [visible, setVisible] = useState(false);\r\n    const showModal = () => setVisible(true);\r\n    const closeModal = () => setVisible(false);\r\n\r\n    const renderVideo = () => {\r\n        if (key && site) {\r\n            return(\r\n                <div>\r\n                    <Button\r\n                    icon={<PlaySquareOutlined />}\r\n                    onClick={showModal}\r\n                >\r\n                    Ver Trailer \r\n                </Button>\r\n                <ModalVideo\r\n                        videoKey={key}\r\n                        videoPlatform={site}\r\n                        isOpen={visible}\r\n                        isClose={closeModal}\r\n                    />\r\n                </div>\r\n                \r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"movie__info\">\r\n                <h1>\r\n                    {title}\r\n                    <span>{moment(release_date, \"YYYY-MM-DD\").format(\"YYYY\")}</span>\r\n                </h1>\r\n                {renderVideo()}\r\n                \r\n            </div>\r\n            <div className=\"movie__content\">\r\n                <h3>General</h3>\r\n                <p>{overview}</p>\r\n                <h3>Géneros</h3>\r\n                <ul>\r\n                    {genres.map(gen=>(\r\n                        <li key={gen.id}>{gen.name}</li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Movie;","const Error404 = () =>{\r\n    return \"Error 404...\"\r\n}\r\n\r\nexport default Error404;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Menu} from 'antd';\r\n// import { ReactComponent as Logo} from '../../assets/movies-react';\r\n\r\n\r\nimport \"./MenuTop.sass\"\r\n\r\n\r\nconst MenuTop = () => {\r\n    return (\r\n        <div className=\"menu-top\">\r\n            {/* <div className=\"menu-top__logo\">\r\n                Logo\r\n            </div> */}\r\n            <Menu\r\n                theme=\"dark\"\r\n                mode=\"horizontal\"\r\n                defaultSelectedKeys={[\"1\"]}\r\n                style={{lineHeight: \"64px\"}}\r\n            >\r\n                <Menu.Item key=\"1\">\r\n                    <Link to=\"/\">Home</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"2\">\r\n                    <Link to=\"/newMovies\">New Movies</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"3\">\r\n                    <Link to=\"/popular\">Popular</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"4\">\r\n                    <Link to=\"/search\">Search</Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MenuTop;","import { Layout } from 'antd';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\n//Pages\r\nimport Home from './pages/home';\r\nimport NewMovies from './pages/newMovies';\r\nimport Popular from './pages/popular';\r\nimport Search from './pages/search';\r\nimport Movie from './pages/movie';\r\nimport Error404 from './pages/error';\r\n\r\n//Components\r\n\r\nimport MenuTop from \"./components/MenuTop\";\r\n\r\nconst App = () => {\r\n\r\n  const { Header, Content } = Layout;\r\n\r\n  return (\r\n    <Layout>\r\n      <Router>\r\n        <Header style={{zIndex: 1}}>\r\n          <MenuTop/>\r\n        </Header>\r\n        <Content>\r\n          <Switch>\r\n            <Route path=\"/\" exact={true} component={Home}/>\r\n            <Route path=\"/newMovies\" exact={true} component={NewMovies}/>\r\n            <Route path=\"/popular\" exact={true} component={Popular}/>\r\n            <Route path=\"/search\" exact={true} component={Search}/>\r\n            <Route path=\"/movie/:id\" exact={true} component={Movie}/>\r\n            <Route path=\"*\" component={Error404}/>\r\n          </Switch>\r\n        </Content>\r\n      </Router>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}