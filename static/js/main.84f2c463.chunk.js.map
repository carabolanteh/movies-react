{"version":3,"sources":["hooks/useFetch.js","utils/constants.js","components/Loading/Loading.jsx","components/SliderMovies/SliderMovies.jsx","components/MovieList/MovieList.jsx","pages/home.jsx","pages/newMovies.jsx","pages/popular.jsx","pages/search.jsx","pages/movie.jsx","pages/error.jsx","components/MenuTop/MenuTop.jsx","App.js","reportWebVitals.js","index.js"],"names":["useFetch","url","options","useState","loading","setLoading","result","setResult","error","setError","useEffect","a","fetch","res","json","URL_API","API_KEY","Loading","className","size","Movie","props","movie","id","backdrop_path","title","overview","backDropPath","style","backgroundImage","to","type","SliderMovies","newMovies","results","outplay","map","RenderMovie","poster_path","posterPath","Item","Meta","avatar","src","shape","icon","RightOutlined","MovieList","popularMovies","header","bordered","dataSource","renderItem","Home","urlPopular","urlRanked","topRanked","span","NewMovies","Popular","Search","Error404","MenuTop","theme","mode","defaultSelectedKeys","lineHeight","App","Header","Layout","Content","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84f2c463.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\r\n\r\nconst useFetch = (url, options)=>{\r\n    const [loading, setLoading] = useState(true);\r\n    const [result, setResult] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        (async ()=>{\r\n            try{\r\n                const res= await fetch(url, options);\r\n                const json= await res.json();\r\n                setResult(json);\r\n                \r\n                setLoading(false);\r\n            } catch(err){\r\n                setError(err);\r\n                setLoading(false);\r\n            }\r\n        })()\r\n    }, [options, url])\r\n    return {loading, result, error};\r\n}\r\n\r\n\r\nexport default useFetch;","export const URL_API = \"https://api.themoviedb.org/3\";\r\nexport const API_KEY = \"20734de95bb307848273312ec09fe030\";\r\n","import {Spin} from 'antd';\r\n\r\nimport './Loading.sass';\r\n\r\nconst Loading = () =>{\r\n    return (\r\n        <div className=\"loading\">\r\n            <Spin size=\"large\"/>\r\n            <h5>Cargando...</h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport { Carousel, Button } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport './SliderMovies.sass';\r\nimport Loading from '../Loading';\r\n\r\n\r\nconst SliderMovies = props => {\r\n\r\n    const { newMovies } = props;\r\n\r\n    if(newMovies.loading || !newMovies.result){\r\n        return <Loading/>\r\n    }else{\r\n        const { results } = newMovies.result;\r\n\r\n        return (\r\n            <Carousel outplay className='slider-movies'>\r\n            {results.map(movie=>(\r\n                <Movie\r\n                        key={movie.id}\r\n                        movie={movie}\r\n                    />\r\n            ))}\r\n            </Carousel>\r\n        );\r\n    }\r\n\r\n    \r\n};\r\n\r\n// componente dendro de componente\r\nconst Movie = props =>{\r\n    const {\r\n        movie:{\r\n            id,\r\n            backdrop_path,\r\n            title,\r\n            overview\r\n        }\r\n    } = props;\r\n\r\n    const backDropPath = `https://image.tmdb.org/t/p/original${backdrop_path}`\r\n\r\n    return(\r\n        <div    \r\n            className=\"slider-movies__movie\"\r\n            style={{backgroundImage:`url('${backDropPath}')`}}\r\n        >\r\n            <div className=\"slider-movies__movie-info\">\r\n                <div>\r\n                    <h2>{title}</h2>\r\n                    <p>{overview}</p>\r\n                    <Link to={`/movie/${id}`}>\r\n                        <Button type=\"primary\">Ver m√°s</Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SliderMovies;","import {List, Avatar, Button} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../Loading\";\r\nimport { RightOutlined } from '@ant-design/icons';\r\nimport './MovieList.sass';\r\n\r\nconst MovieList = props => {\r\n\r\n    const {title, popularMovies} = props;\r\n\r\n\r\n    if(popularMovies.Loading || !popularMovies.result){\r\n        return (\r\n            <Loading />\r\n        )\r\n    }\r\n    \r\n    return(\r\n        <List\r\n            className=\"movie-list\"\r\n            size=\"default\"\r\n            header={<h2>{title}</h2>}\r\n            bordered\r\n            dataSource={popularMovies.result.results}\r\n            renderItem={movie=> <RenderMovie movie={movie} />}\r\n        />\r\n    )\r\n}\r\n\r\nconst RenderMovie = props => {\r\n    const {\r\n        movie: {\r\n            poster_path,\r\n            id,\r\n            title\r\n        } \r\n    } = props;\r\n\r\n    \r\n    const posterPath = `https://image.tmdb.org/t/p/original${poster_path}`\r\n\r\n\r\n    return(\r\n        <List.Item className=\"movie-list__movie\">\r\n            <List.Item.Meta\r\n                avatar={<Avatar src={posterPath} />}\r\n                title={<Link to={`/movie/${id}`}>{title}</Link>}\r\n            />\r\n            <Link to={`/movie/${id}`}>\r\n                <Button \r\n                    type=\"primary\"\r\n                    shape=\"circle\"\r\n                    icon={<RightOutlined />} \r\n                >\r\n                </Button>\r\n            </Link>\r\n        </List.Item >\r\n    )\r\n}\r\n\r\nexport default MovieList;","import React from \"react\";\r\nimport useFetch from \"../hooks/useFetch\";\r\n\r\nimport {URL_API, API_KEY} from '../utils/constants';\r\nimport { Row, Col } from \"antd\";\r\n\r\nimport SliderMovies from '../components/SliderMovies';\r\n\r\nimport MovieList from \"../components/MovieList/MovieList\";\r\n\r\n\r\n\r\nconst Home = () =>{\r\n    \r\n    const url = `${URL_API}/movie/now_playing?api_key=${API_KEY}&language=en-ES&page=1`;\r\n    const urlPopular =  `${URL_API}/movie/popular?api_key=${API_KEY}&language=es-ES&page=1`\r\n    const urlRanked = `${URL_API}/movie/top_rated?api_key=${API_KEY}&language=es-ES&page=1`\r\n\r\n    const newMovies = useFetch(url);\r\n    const popularMovies = useFetch(urlPopular);\r\n    const topRanked = useFetch(urlRanked);\r\n\r\n    return (\r\n        <div>\r\n            <SliderMovies newMovies={newMovies}/>\r\n            <Row>\r\n                <Col span={12}>\r\n                    <MovieList \r\n                        title=\"Pel√≠culas Populares\"\r\n                        popularMovies={popularMovies}\r\n                    />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <MovieList \r\n                        title=\"Top Mejores Pel√≠culas\"\r\n                        popularMovies={topRanked}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","const NewMovies = () => {\r\n    return \"Estamos en New Movies\"\r\n}\r\n\r\nexport default NewMovies;","const Popular = () => {\r\n    return \"Estamos en Popular\"\r\n}\r\n\r\nexport default Popular;","const Search = () => {\r\n    return \"Estamos en Search\"\r\n}\r\n\r\nexport default Search;","const Movie = () =>{\r\n    return \"Estamos en Movie\"\r\n}\r\n\r\nexport default Movie;","const Error404 = () =>{\r\n    return \"Error 404...\"\r\n}\r\n\r\nexport default Error404;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Menu} from 'antd';\r\n// import { ReactComponent as Logo} from '../../assets/movies-react';\r\n\r\n\r\nimport \"./MenuTop.sass\"\r\n\r\n\r\nconst MenuTop = () => {\r\n    return (\r\n        <div className=\"menu-top\">\r\n            {/* <div className=\"menu-top__logo\">\r\n                Logo\r\n            </div> */}\r\n            <Menu\r\n                theme=\"dark\"\r\n                mode=\"horizontal\"\r\n                defaultSelectedKeys={[\"1\"]}\r\n                style={{lineHeight: \"64px\"}}\r\n            >\r\n                <Menu.Item key=\"1\">\r\n                    <Link to=\"/\">Home</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"2\">\r\n                    <Link to=\"/newMovies\">New Movies</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"3\">\r\n                    <Link to=\"/popular\">Popular</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"4\">\r\n                    <Link to=\"/search\">Search</Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MenuTop;","import { Layout } from 'antd';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\n//Pages\r\nimport Home from './pages/home';\r\nimport NewMovies from './pages/newMovies';\r\nimport Popular from './pages/popular';\r\nimport Search from './pages/search';\r\nimport Movie from './pages/movie';\r\nimport Error404 from './pages/error';\r\n\r\n//Components\r\n\r\nimport MenuTop from \"./components/MenuTop\";\r\n\r\nconst App = () => {\r\n\r\n  const { Header, Content } = Layout;\r\n\r\n  return (\r\n    <Layout>\r\n      <Router>\r\n        <Header>\r\n          <MenuTop/>\r\n        </Header>\r\n        <Content>\r\n          <Switch>\r\n            <Route path=\"/\" exact={true} component={Home}/>\r\n            <Route path=\"/newMovies\" exact={true} component={NewMovies}/>\r\n            <Route path=\"/popular\" exact={true} component={Popular}/>\r\n            <Route path=\"/search\" exact={true} component={Search}/>\r\n            <Route path=\"/movie/:id\" exact={true} component={Movie}/>\r\n            <Route path=\"*\" component={Error404}/>\r\n          </Switch>\r\n        </Content>\r\n      </Router>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}